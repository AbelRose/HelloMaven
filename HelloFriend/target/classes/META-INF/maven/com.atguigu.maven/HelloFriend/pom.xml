<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<!-- <groupId>com.atguigu.maven</groupId> -->
	<artifactId>HelloFriend</artifactId>
	<!-- <version>0.0.1-SNAPSHOT</version> -->

	<name>HelloFriend</name>
	<description>演示项目依赖关系</description>

	<!-- 继承父工程 -->
	<parent>
		<groupId>com.atguigu.maven</groupId>
		<artifactId>parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../parent/pom.xml</relativePath>
	</parent>

	<dependencies>
		<!-- 
		②test
			[1]main目录下的Java代码【不能】访问这个范围的依赖
			[2]test目录下的Java代码【可以】访问这个范围的依赖
			[3]部署到Tomcat服务器上运行时【不会放在】WEB-INF的lib目录下
			例如：对junit的依赖。仅仅是测试程序部分需要。
		 -->
	
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<!-- <version>4.9</version> -->
			<!-- <scope>test</scope> -->
		</dependency>

		<!-- 
			①compile  默认值，可以省略。
				[1]main目录下的Java代码【可以】访问这个范围的依赖
				[2]test目录下的Java代码【可以】访问这个范围的依赖
				[3]部署到Tomcat服务器上运行时【要放在】WEB-INF的lib目录下
				例如：对Hello的依赖。主程序、测试程序和服务器运行时都需要用到。				
		 -->		
 		<dependency>
			<groupId>com.atguigu.maven</groupId>
			<artifactId>Hello</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<scope>compile</scope>
		</dependency>

		<!-- 
		③provided
			[1]main目录下的Java代码【可以】访问这个范围的依赖
			[2]test目录下的Java代码【可以】访问这个范围的依赖
			[3]部署到Tomcat服务器上运行时【不会放在】WEB-INF的lib目录下
			例如：servlet-api在服务器上运行时，Servlet容器会提供相关API，所以部署的时候不需要。
		 -->		 
		 <!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
		<dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>javax.servlet-api</artifactId>
		    <version>3.0.1</version>
		    <scope>provided</scope>
		</dependency>
		 
	</dependencies>



</project>